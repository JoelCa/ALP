Variables p,q,r,t,y;

Theorem t23 : forall o,
                forall t, (forall w, forall r, o /\ w) -> o /\ t;
  intros;
  apply H0;
  exact (o \/ ~ ~ t);

Theorem t24 : p -> q -> (((p /\ q) /\ p /\ p) /\ q) /\ p;
  intros;
  split;
  split;
  split;
  split;
  assumption ;
  assumption ;
  split ;
  assumption;
  assumption;
  assumption;
  assumption;
x x y = forall w, forall v, x /\ y;
Theorem t25 : forall w, forall y, x w y -> x w y;
  intro;
  intros;
  assumption;
Theorem t26 : forall w, forall y, w /\ y -> w \/ y;
  intros;
  right;
  elim H0;
  intros;
  assumption;
Theorem t27 : p -> (p <-> p) -> p;
  intros;
  assumption;
fun1 w = forall x, w -> x -> w;
fun2 w = forall x, w -> x -> x -> w;
Theorem t28 : fun1 (fun2 p);
  unfold fun2;
  unfold fun1;
  intros;
  assumption;
Theorem t29 : p -> p \/ p /\ (p \/ q);
  intros;
  left;
  assumption;

x -- y = forall w, (w /\ x) /\ y -> w;

x ^ y = forall w, forall v, x /\ y /\ w \/ v -> x /\ y;

Theorem t30 : (p -- q) ^ q -- p;
  unfold ^;
  intros;
  elim H0;
  intros;
  elim H2;
  intros;
  split;
  assumption;
  assumption;
q ++ k = forall x, x -> q -> q;
Theorem t31 : p -- (q ^ q) -- p ++ q;
  unfold ^;
  unfold /\;
  unfold ++;
  unfold --;
  intros;
  elim H0;
  intros;
  elim H1;
  intros;
  assumption;
Theorem t32 : (p -- q ^ q -- p) ^ (q ++ q) ^ p;
  unfold ^;
  intros;
  elim H0;
  intros;
  split;
  assumption;
  elim H2;
  intros;
  elim H5;
  intros;
  elim H7;
  intros;
  split;
  assumption;
  assumption;
Theorem t33 : ~ p \/ fun1 p;
  right;
  unfold fun1;
  intros;
  assumption;
Theorem t34 : forall x, x -> x /\ (x <-> x);
  intro;
  intro;
  split;
  assumption;
  unfold <->;
  split;
  intro;
  assumption;
  intro;
  assumption;
Theorem t35 : False -> ~ p;
  intro;
  elim H0;
fun3 w y = forall x, w -> x -> y -> w;
Theorem t36 : fun3 p q -> fun2 q;
  intro;
  unfold fun3 in H0;
  unfold fun2;
  intros;
  assumption;
Theorem t37 : fun1 p /\ (p -> p);
  split;
  unfold fun1;
  intros;
  assumption;
  intro;
  assumption;
Theorem t38 : forall bb, forall aa, aa -> (forall aa0, aa0 -> aa);
  intro;
  exact (\aa.\x:aa.\aa.\y:aa.x) as forall bb, bb -> (forall cc, cc -> bb);
Theorem t39 : forall x, forall y, (x -> ~ y) -> y -> x -> ~ x;
  intros;
  cut False;
  intro;
  elim H3;
  absurd y0;
  assumption;
  apply H0;
  assumption;
Theorem t40 : forall x,
                forall y,
                  x -> y -> (forall x, forall y, x /\ y -> x \/ y) -> x \/ y;
  intros;
  cut (x0 /\ y0);
  apply H2;
  split;
  assumption;
  assumption;
fun3_2 x = ~x /\ (forall x, x);
Theorem t41 : forall x, fun3_2 x -> x -> x \/ ~ x;
  intros;
  right;
  unfold fun3_2;
  unfold fun3_2 in H0;
  elim H0;
  intros;
  assumption;
op x = forall y, y -> x;
Theorem t42 : False
              -> op (forall y, y) -> (forall y0, y0 -> False);
  intros;
  unfold op in H1;
  assumption;
x $ y = forall w, (w /\ x) /\ y -> w;
Theorem t43 : forall w,
                forall p, w -> (forall p, (p $ w) -- (forall w, forall p, w /\ p));
  intros;
  unfold --;
  intros;
  elim H1;
  intros;
  elim H2;
  intros;
  assumption;
Theorem t45 : forall t,
                forall g,
                  (forall x, forall y, exists z, z /\ (x \/ ~ (exists k, k -> y)))
                  -> (exists q, q /\ ((t -> g) \/ ~ (exists m, m -> g -> t)));
  intros;
  apply H0;
Theorem t47 : forall p,
                forall q,
                  p
                  -> q
                     -> ((forall x, x -> x) /\ (forall w, w -> w))
                        /\ (forall k, p /\ q);
  intros;
  split;
  split;
  exact (\a. \x:a. x) as forall ww, ww -> ww;
  exact (\q. \y:q. y) as forall kk, kk -> kk;
  exact (\z. intro_and [p0] [q0] H0 H1) as forall mm, p0 /\ q0;
Algo = forall w, w \/ w;
Theorem t48 : forall k, ~ Algo /\ Algo -> k;
  intros;
  cut False;
  intro;
  elim H1;
  absurd Algo;
  elim H0;
  intros;
  assumption;
  elim H0;
  intros;
  assumption;
jojo x x = forall w, forall v, x /\ v;
Theorem t49 : forall m, jojo m (~ m) -> False -> ~ False;
  intros;
  elim H1;
op2 = forall w, w -> w;
Theorem t50 : op2 -> (forall op2, op2 -> op2);
  intros;
  assumption;
Theorem t51 : forall w, forall w, w -> w;
  intro;
  exact (\h.\x:h.x);
op3 x = forall q, q -> x -> q;
Theorem t52 : forall q, op3 q;
  unfold op3;
  intros;
  assumption;
cc = forall qq, qq -> qq;
Theorem t53 : forall qq, qq -> cc;
  unfold cc;
  intros;
  assumption;
qq = forall t, t -> t /\ t;
Theorem t54 : qq -> cc;
  unfold cc;
  intros;
  assumption;
H = \a.\x:a.x;
H0 = \a.\x:a.x;
Theorem t55 : forall p, forall q, p -> p;
  intros;
  assumption;
Theorem t55_2 : forall p, p -> (forall q, q -> q);
  intro;
  intro;
  exact H0;
